name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, develop ]

jobs:

  test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: [3.10.6]
    env:
      PIP_DISABLE_PIP_VERSION_CHECK: on
      SECRET: example@example.com
      EMAIL: 'example@example.com'
      EMAIL_PASS: 'example@example.com'
      BASE_URL: 'http:/localhost:8080'

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python_version }}

    #----------------------------------------------
    #  -----  install & configure poetry  -----
    #----------------------------------------------
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true


    #----------------------------------------------
    # `----- load cached venv if cache exists -----
    #----------------------------------------------
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/pyproject.toml') }}

    #----------------------------------------------
    # install dependencies if cache does not exist
    #----------------------------------------------
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    #----------------------------------------------
    # Run tests
    #----------------------------------------------
    - name: Test with pytest
      run: |
        source .venv/bin/activate
        make test
